import java.util.HashSet;

class WordGuess{
  String[] words = {
"able",
"about",
"above",
"accept",
"according",
"account",
"across",
"act",
"action",
"all",
"allow",
"almost",
"alone",
"along",
"already",
"also",
"although",
"always",
"American",
"among",
"amount",
"analysis",
"and",
"animal",
"another",
"at",
"attack",
"attention",
"attorney",
"audience",
"author",
"authority",
"available",
"avoid",
"away",
"baby",
"back",
"bad",
"bag",
"ball",
"bank",
"bar",
"base",
"be",
"beat",
"body",
"book",
"born",
"both",
"box",
"boy",
"break",
"bring",
"brother",
"budget",
"build",
"building",
"business",
"but",
"buy",
"by",
"call",
"camera",
"campaign",
"can",
"cancer",
"candidate",
"capital",
"car",
"card",
"care",
"career",
"carry",
"case",
"catch",
"cause",
"cell",
"center",
"central",
"crime",
"cultural",
"culture",
"cup",
"current",
"customer",
"cut",
"dark",
"data",
"daughter",
"day",
"dead",
"deal",
"death",
"debate",
"decade",
"decide",
"decision",
"deep",
"defense",
"degree",
"Democrat",
"democratic",
"describe",
"design",
"despite",
"detail",
"drug",
"during",
"each",
"early",
"east",
"easy",
"eat",
"economic",
"economy",
"edge",
"education",
"effect",
"effort",
"eight",
"either",
"election",
"else",
"employee",
"end",
"energy",
"enjoy",
"enough",
"enter",
"entire",
"environment",
"environmental",
"especially",
"establish",
"even",
"evening",
"event",
"ever",
"every",
"everybody",
"everyone",
"everything",
"evidence",
"exactly",
"example",
"executive",
"finger",
"finish",
"fire",
"firm",
"first",
"fish",
"five",
"floor",
"fly",
"focus",
"follow",
"food",
"foot",
"for",
"force",
"foreign",
"his",
"history",
"hit",
"hold",
"home",
"hope",
"information",
"inside",
"instead",
"institution",
"interest",
"interesting",
"international",
"interview",
"into",
"investment",
"involve",
"issue",
"it",
"item",
"its",
"itself",
"job",
"join",
"just",
"keep",
"key",
"kid",
"kill",
"kind",
"kitchen",
"know",
"knowledge",
"land",
"language",
"large",
"last",
"little",
"live",
"local",
"long",
"look",
"lose",
"loss",
"lot",
"love",
"low",
"machine",
"magazine",
"main",
"maintain",
"major",
"majority",
"make",
"man",
"manage",
"management",
"manager",
"many",
"market",
"marriage",
"model",
"modern",
"moment",
"money",
"month",
"more",
"morning",
"most",
"mother",
"mouth",
"move",
"movement",
"movie",
"Mr",
"Mrs",
"much",
"music",
"must",
"my",
"myself",
"name",
"nation",
"national",
"natural",
"nature",
"near",
"office",
"officer",
"official",
"often",
"oh",
"oil",
"ok",
"old",
"on",
"once",
"one",
"only",
"onto",
"open",
"operation",
"opportunity",
"option",
"or",
"order",
"organization",
"other",
"others",
"our",
"out",
"outside",
"over",
"own",
"owner",
"page",
"pain",
"painting",
"paper",
"parent",
"part",
"participant",
"particular",
"particularly",
"partner",
"party",
"pass",
"past",
"patient",
"pattern",
"pay",
"peace",
"people",
"per",
"perform",
"performance",
"perhaps",
"period",
"person",
"personal",
"phone",
"physical",
"pick",
"picture",
"piece",
"place",
"plan",
"plant",
"play",
"player",
"PM",
"point",
"police",
"policy",
"political",
"politics",
"poor",
"popular",
"population",
"position",
"positive",
"possible",
"power",
"practice",
"prepare",
"radio",
"raise",
"range",
"rate",
"rather",
"reach",
"read",
"ready",
"real",
"reality",
"rich",
"right",
"rise",
"risk",
"road",
"rock",
"role",
"room",
"sexual",
"shake",
"share",
"she",
"shoot",
"short",
"shot",
"should",
"shoulder",
"show",
"side",
"sign",
"significant",
"similar",
"simple",
"simply",
"since",
"sing",
"single",
"sister",
"sit",
"site",
"situation",
"six",
"size",
"skill",
"skin",
"small",
"smile",
"so",
"social",
"society",
"soldier",
"some",
"somebody",
"someone",
"something",
"sometimes",
"son",
"song",
"soon",
"sort",
"sound",
"source",
"south",
"southern",
"space",
"speak",
"special",
"summer",
"support",
"sure",
"surface",
"system",
"table",
"take",
"talk",
"task",
"tax",
"teach",
"teacher",
"team",
"technology",
"television",
"tell",
"ten",
"tend",
"term",
"test",
"than",
"thank",
"that",
"the",
"their",
"them",
"themselves",
"then",
"theory",
"there",
"these",
"they",
"thing",
"think",
"third",
"this",
"those",
"though",
"thought",
"thousand",
"threat",
"three",
"through",
"throughout",
"throw",
"thus",
"time",
"to",
"today",
"west",
"western",
"what",
"whatever",
"when",
"where",
"whether",
"which",
"while"};
  String word = words[int(random(words.length-1))];
  char[] wordHidden = new char [word.length()];
  String wordNotHidden;
  int lives = 7;
  boolean NotgameOver = true;
  
  HashSet<Character> wrongs = new HashSet<Character>();
  WordGuess(){
    //initial _ instead of words
    for (int i = 0;i<wordHidden.length;i++){
      wordHidden[i] = '_';
    }
  }
  
  void displayWord(){
    background(0);
    textSize(20);
    text("Lives: " + lives,width-50,height-550);
    textAlign(CENTER, BOTTOM);
    text("Press any key on the keyboard to guess the word",width/2,100);
    
    int increment = 0;
    for (int i = 0;i<wordHidden.length;i++){
      text(wordHidden[i],(width*1)/(word.length())+increment,height/2);
      increment += 50;
    } 
     wordNotHidden = new String(wordHidden);
    text("Wrong Letters: "+ wrongs.toString(),width/2,500);
    if(wordNotHidden.toUpperCase().equals((word).toUpperCase())){
      textSize(130);
      text("YOU WIN",width/2,height/2);
      NotgameOver = false;
    }
    if(lives <= 0){
      textSize(130);
      text("YOU LOSE",width/2,height/2);
      textSize(20);
      text("The word was "+ word,width/2,height,2);
      NotgameOver = false;
      
    }
  }

   
  void keyPressed(){
   if(NotgameOver){
    boolean inside = false;
    if(wrongs.contains(key)){
      return;
    }
    
    for(int i = 0 ;i<word.length();i++){
      if(Character.toUpperCase(key) == Character.toUpperCase(word.charAt(i))){
        inside = true;
        wordHidden[i] = key;
      }
      
      
      }
      if(!inside){
        wrongs.add(key);
        lives -= 1;
    }
  }
  }
  
}
